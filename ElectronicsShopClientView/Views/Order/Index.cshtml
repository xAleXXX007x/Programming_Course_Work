@model ElectronicsShopClientView.Models.PeriodOrderModel

@{
    ViewData["Title"] = "Заказы";
}

@using (Html.BeginForm())
{
    <p>
        Получить отчеты за период
        От: @Html.EditorFor(x => x.From)
        До: @Html.EditorFor(x => x.To)
        @Html.EditorFor(x => x.SendMail) Отправить отчёт на почту

        <button type="submit">Получить</button>
    </p>
}

<h1>@ViewData["Title"]</h1>

@foreach (var order in ViewBag.orders)
{
    <p>Номер: @order.Id</p>
    <p>Дата заказа: @order.Date</p>
    <p>Статус: @order.Status</p>
    <p>Доставка: @order.Shipping, по адресу @order.Address</p>
    <p>Состав:</p>
    <table>
        <tr class="header">
            <td>Товар</td>
            <td>Описание</td>
            <td>Количество</td>
            <td>Цена за шт.</td>
            <td>Полная цена</td>
        </tr>
        @foreach (var product in order.Products)
        {
            <tr>
                @{
                    var price = product.Price * product.Count;
                }
                <td>@product.Name</td>
                <td>@product.Desc</td>
                <td>@product.Count</td>
                <td>@product.Price</td>
                <td>@price</td>
            </tr>
        }
    </table>
    <br />
    <p>Сумма заказа: @order.Sum</p>
    if (order.Status == ElectronicsShopBusinessLogic.Enums.OrderStatus.Оплачен)
    {
        <p>Полностью оплачено</p>
    }
    else
    {
        if (order.Status == ElectronicsShopBusinessLogic.Enums.OrderStatus.Оплачивается)
        {
            <p>Оплачено: @order.SumPaid</p>
        }

        <p><a class="action" href="/Order/PayOrder/@order.Id">Оплатить</a></p>
    }
    <p><a class="action" href="/Order/SendWordReport/@order.Id">Отправить список товаров .docx</a></p>
    <p><a class="action" href="/Order/SendExcelReport/@order.Id">Отправить список товаров .xslx</a></p>
    <hr />
}

@if (!Program.Client.Blocked)
{
    <a class="nav-link text-dark" asp-area="" asp-controller="Order" asp-action="CreateOrder">Заказать</a>
}

